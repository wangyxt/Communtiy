<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lixiangshequ.repository.NoticeMapper" >
  <resultMap id="BaseResultMap" type="com.lixiangshequ.entity.Notice" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="pub_time" property="pubTime" jdbcType="TIMESTAMP" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="genre" property="genre" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.lixiangshequ.entity.Notice" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, pub_time, title, state, genre
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectAll" resultMap="ResultMapWithBLOBs">
    select * from notice where state = 1
  </select>

  <select id="selectAllWaitNotice" resultMap="ResultMapWithBLOBs">
    select * from notice where state = 0
  </select>

  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from notice
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from notice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lixiangshequ.entity.Notice" >
    insert into notice (id, pub_time, title, 
      state, genre, content
      )
    values (#{id,jdbcType=INTEGER},now(), #{title,jdbcType=VARCHAR},
      #{state,jdbcType=INTEGER}, #{genre,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lixiangshequ.entity.Notice" >
    insert into notice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="pubTime != null" >
        pub_time,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="genre != null" >
        genre,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pubTime != null" >
        #{pubTime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="genre != null" >
        #{genre,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lixiangshequ.entity.Notice" >
    update notice
    <set >
      <if test="pubTime != null" >
        pub_time = #{pubTime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="genre != null" >
        genre = #{genre,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lixiangshequ.entity.Notice" >
    update notice
    set pub_time = #{pubTime,jdbcType=TIMESTAMP},
      title = #{title,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      genre = #{genre,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lixiangshequ.entity.Notice" >
    update notice
    set pub_time = #{pubTime,jdbcType=TIMESTAMP},
      title = #{title,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      genre = #{genre,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>